@using ForumNet.Web.ViewModels.Messages
@model ChatWithUserViewModel
@{
    ViewData["Title"] = "Messages";
}

<div class="container">
    <div class="tt-messages-layout">
        <div class="row no-gutters">
            <div class="col-md-4 tt-aside" id="js-aside">
                <a asp-area="" asp-controller="Chat" asp-action="SendMessage" class="tt-title-aside">
                    <h2 class="tt-title">
                        @ViewData["Title"]
                    </h2>
                    <i class="tt-icon">
                        <svg class="icon">
                            <use xlink:href="#icon-pencil"></use>
                        </svg>
                    </i>
                </a>

                <partial name="_ConversationsPartial" model="Model.Chats" />

            </div>
            <div class="col-md-8">
                <div class="tt-title-content">
                    <a href="#" class="tt-toggle-aside">
                        <i class="tt-icon">
                            <svg class="icon">
                                <use xlink:href="#icon-arrow_left"></use>
                            </svg>
                        </i>
                    </a>
                    <h2 class="tt-title">
                        @Model.Messages.Select(m => m.AuthorUserName).FirstOrDefault()
                    </h2>
                    <a href="#" class="tt-icon-link">
                        <i class="tt-icon">
                            <svg class="icon">
                                <use xlink:href="#notification"></use>
                            </svg>
                        </i>
                    </a>
                </div>
                <div id="messagesList" class="tt-list-time-topic" style="overflow-y: auto; height:400px; display:block; word-break:break-all">

                    @foreach (var message in Model.Messages)
                    {
                        <div class="tt-item">
                            <div class="tt-col-avatar">
                                <svg class="tt-icon">
                                    <use xlink:href="@message.AuthorProfilePicture"></use>
                                </svg>
                            </div>
                            <div class="tt-col-description">
                                <h4 class="tt-title">
                                    <a asp-area="" asp-controller="Users" asp-action="Threads" asp-route-id="@message.AuthorId">@message.AuthorUserName</a>
                                    <span class="time">@message.CreatedOn</span>
                                </h4>
                                @Html.Raw(message.Content)
                            </div>
                        </div>
                    }

                </div>

                <div class="tt-wrapper-inner">
                    <div class="pt-editor form-default">
                        <div id="addMessageForm">
                            <div class="form-group">
                                <input id="messageInput" class="form-control" placeholder="Write your message here" />
                            </div>
                            <div class="pt-row">
                                <div class="col-auto ml-auto">
                                    <button id="sendButton" class="btn btn-secondary btn-custom">Send</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var element = document.getElementById("messagesList");
        element.scrollTop = element.scrollHeight;

        function updateScroll() {
            var element = document.getElementById("messagesList");
            element.scrollTop = element.scrollHeight;
        }

        setInterval(updateScroll, 500);

        $('#messageInput').on('keypress', function (e) {
            if (e.which == 13) {
                $('#sendButton').click();
            }
        });

        var connection = new signalR.HubConnectionBuilder()
            	.withUrl("/chat")
            	.build();

        connection.on("ReceiveMessage", function (message) {
            var chatInfo = `<div class="tt-item">
                                <div class="tt-col-avatar">
                                    <svg class="tt-icon">
                                        <use xlink:href="${message.authorProfilePicture}"></use>
                                    </svg>
                                </div>
                                <div class="tt-col-description">
                                    <h4 class="tt-title">
                                    <a asp-area="" asp-controller="Users" asp-action="Threads" asp-route-id="${message.authorId}">${message.authorUserName}
                                    </a>
                                    <span class="time">${message.createdOn}</span>
                                    </h4>
                                    ${message.content}
                                </div>
                            </div>`;

            $("#messagesList").append(chatInfo);
        });

        $("#sendButton").click(function () {
            var message = $('#messageInput').val();
            $('#messageInput').val('');
            connection.invoke("SendMessage", message, '@Model.ReceiverId');
        });

        connection.start().catch(function (err) {
            return console.error(err.toString());
        });
    </script>
    <partial name="_ValidationScriptsPartial" />
}