@using ForumNet.Web.Infrastructure.Extensions
@using ForumNet.Web.ViewModels.Posts
@using ForumNet.Web.ViewModels.Replies
@model PostsDetailsViewModel
@{
    ViewData["Title"] = Model.Title;
}

<br />
<div class="container">
    <div class="tt-single-topic-list">
        <div class="tt-item">
            <div class="tt-single-topic">
                <div class="tt-item-header">
                    <div class="tt-item-info info-top">
                        <div class="tt-avatar-icon">
                            <i class="tt-icon"><svg><use xlink:href="#@Model.Author.ProfilePicture"></use></svg></i>
                        </div>
                        <div class="tt-avatar-title">
                            <a href="#">@Model.Author.UserName</a>
                        </div>
                        <div class="tt-info-time">
                            @if (this.User.IsAdministrator())
                            {
                                <button style="padding: 0; border: none; background: none; outline: none; color: #666f74" onclick="pinPost(@Model.Id)">
                                    <i class="fas fa-thumbtack"></i>
                                    <span id="isPinned">@(Model.IsPinned ? "Unpin" : "Pin")</span>
                                </button>
                            }
                            <i class="tt-icon"><svg><use xlink:href="#icon-time"></use></svg></i>@Model.CreatedOn
                        </div>
                    </div>
                    <h3 class="tt-item-title">
                        <a href="#">@Model.Title</a>
                    </h3>
                    <div class="tt-item-tag">
                        <ul class="tt-list-badge">
                            <li>
                                <a asp-area="" asp-controller="Categories" asp-action="Details" asp-route-id="@Model.Category.Id">
                                    <span class="tt-color03 tt-badge">@Model.Category.Name</span>
                                </a>
                            </li>
                            @foreach (var tag in Model.Tags)
                            {
                                <li><a href="#"><span class="tt-badge">@tag.Name</span></a></li>
                            }
                        </ul>
                    </div>
                </div>
                <div class="tt-item-description">
                    <p>@Html.Raw(Model.SanitizedDescription)</p>
                </div>
                <div class="tt-item-info info-bottom">
                    <button type="button" class="tt-icon-btn" style="padding: 0; border:none; background:none; outline: none; color: #666f74" onclick="likeReactPost(@Model.Id)">
                        <i class="tt-icon"><svg><use xlink:href="#icon-like"></use></svg></i>
                    </button>
                    <button type="button" class="tt-icon-btn" style="padding: 0; border:none; background:none; outline: none; color: #666f74" onclick="loveReactPost(@Model.Id)">
                        <i class="fas fa-heart"></i>
                    </button>
                    <button type="button" class="tt-icon-btn" style="padding: 0; border:none; background:none; outline: none; color: #666f74" onclick="hahaReactPost(@Model.Id)">
                        <i class="fas fa-grin-tears"></i>
                    </button>
                    <button type="button" class="tt-icon-btn" style="padding: 0; border:none; background:none; outline: none; color: #666f74" onclick="wowReactPost(@Model.Id)">
                        <i class="fas fa-surprise"></i>
                    </button>
                    <button type="button" class="tt-icon-btn" style="padding: 0; border:none; background:none; outline: none; color: #666f74" onclick="sadReactPost(@Model.Id)">
                        <i class="fas fa-sad-tear"></i>
                    </button>
                    <button type="button" class="tt-icon-btn" style="padding: 0; border:none; background:none; outline: none; color: #666f74" onclick="angryReactPost(@Model.Id)">
                        <i class="fas fa-angry"></i>
                    </button>
                    <div class="col-separator"></div>
                    @if (this.Model.Author.Id == this.Model.CurrentUserId || this.User.IsAdministrator())
                    {
                        <a asp-area="" asp-controller="Posts" asp-action="Edit" asp-route-id="@Model.Id" class="tt-icon-btn" style="color: #666f74">
                            <i class="fas fa-pen"></i>
                        </a>
                        <a asp-area="" asp-controller="Posts" asp-action="Delete" asp-route-id="@Model.Id" class="tt-icon-btn" style="color: #666f74">
                            <i class="fas fa-trash-alt"></i>
                        </a>
                    }
                    <a href="#" class="tt-icon-btn tt-hover-02 tt-small-indent">
                        <i class="tt-icon"><svg><use xlink:href="#icon-share"></use></svg></i>
                    </a>
                    <a href="#" class="tt-icon-btn tt-hover-02 tt-small-indent">
                        <i class="tt-icon"><svg><use xlink:href="#icon-flag"></use></svg></i>
                    </a>
                    <button style="padding: 0; border:none; background:none; outline:none" class="tt-icon-btn tt-hover-02 tt-small-indent" onclick="animateButton()">
                        <i class="tt-icon"><svg><use xlink:href="#icon-reply"></use></svg></i>
                    </button>
                </div>
            </div>
        </div>
        <div class="tt-item">
            <div class="tt-info-box">
                <h6 class="tt-title">Thread Status</h6>
                <div class="tt-row-icon">
                    <div class="tt-item">
                        <div class="tt-icon-btn tt-position-bottom">
                            <i class="tt-icon"><svg><use xlink:href="#icon-reply"></use></svg></i>
                            <span class="tt-text">@Model.RepliesCount</span>
                        </div>
                    </div>
                    <div class="tt-item">
                        <div class="tt-icon-btn tt-position-bottom">
                            <i class="tt-icon"><svg><use xlink:href="#icon-view"></use></svg></i>
                            <span class="tt-text">@Model.Views</span>
                        </div>
                    </div>
                    <div class="tt-item">
                        <div class="tt-icon-btn tt-position-bottom">
                            <i class="tt-icon"><svg><use xlink:href="#icon-like"></use></svg></i>
                            <span id="post-likes" class="tt-text">@Model.Likes</span>
                        </div>
                    </div>
                    <div class="tt-item">
                        <div class="tt-icon-btn tt-position-bottom">
                            <i class="tt-icon fas fa-heart"></i>
                            <span id="post-loves" class="tt-text">@Model.Loves</span>
                        </div>
                    </div>
                    <div class="tt-item">
                        <div class="tt-icon-btn tt-position-bottom">
                            <i class="tt-icon fas fa-grin-tears"></i>
                            <span id="post-haha" class="tt-text">@Model.HahaCount</span>
                        </div>
                    </div>
                    <div class="tt-item">
                        <div class="tt-icon-btn tt-position-bottom">
                            <i class="tt-icon fas fa-surprise"></i>
                            <span id="post-wow" class="tt-text">@Model.WowCount</span>
                        </div>
                    </div>
                    <div class="tt-item">
                        <div class="tt-icon-btn tt-position-bottom">
                            <i class="tt-icon fas fa-sad-tear"></i>
                            <span id="post-sad" class="tt-text">@Model.SadCount</span>
                        </div>
                    </div>
                    <div class="tt-item">
                        <div class="tt-icon-btn tt-position-bottom">
                            <i class="tt-icon fas fa-angry"></i>
                            <span id="post-angry" class="tt-text">@Model.AngryCount</span>
                        </div>
                    </div>

                </div>
                @if (Model.Replies.Any())
                {
                    <hr />
                    <h6 class="tt-title">Frequent Posters</h6>
                    <div class="tt-row-icon">
                        @foreach (var reply in Model.Replies)
                        {
                            <div class="tt-item">
                                <a href="#" class="tt-icon-avatar">
                                    <svg><use xlink:href="#@reply.Author.ProfilePicture"></use></svg>
                                </a>
                            </div>
                        }
                    </div>
                    <hr />
                    <div class="row-object-inline form-default">
                        <h6 class="tt-title">Sort replies by:</h6>
                        <ul class="tt-list-badge tt-size-lg">
                            @{
                                this.Context.Request.Query.TryGetValue("sort", out var value);
                                if (value == "most liked")
                                {
                                    <li><a asp-area="" asp-controller="Posts" asp-action="Details" asp-route-id="@Model.Id" asp-route-sort="recent"><span class="tt-badge">Recent</span></a></li>
                                    <li><a asp-area="" asp-controller="Posts" asp-action="Details" asp-route-id="@Model.Id" asp-route-sort="most liked"><span class="tt-color02 tt-badge">Most Liked</span></a></li>
                                    <li><a asp-area="" asp-controller="Posts" asp-action="Details" asp-route-id="@Model.Id" asp-route-sort="longest"><span class="tt-badge">Longest</span></a></li>
                                    <li><a asp-area="" asp-controller="Posts" asp-action="Details" asp-route-id="@Model.Id" asp-route-sort="shortest"><span class="tt-badge">Shortest</span></a></li>
                                }
                                else if (value == "longest")
                                {
                                    <li><a asp-area="" asp-controller="Posts" asp-action="Details" asp-route-id="@Model.Id" asp-route-sort="recent"><span class="tt-badge">Recent</span></a></li>
                                    <li><a asp-area="" asp-controller="Posts" asp-action="Details" asp-route-id="@Model.Id" asp-route-sort="most liked"><span class="tt-badge">Most Liked</span></a></li>
                                    <li><a asp-area="" asp-controller="Posts" asp-action="Details" asp-route-id="@Model.Id" asp-route-sort="longest"><span class="tt-color02 tt-badge">Longest</span></a></li>
                                    <li><a asp-area="" asp-controller="Posts" asp-action="Details" asp-route-id="@Model.Id" asp-route-sort="shortest"><span class="tt-badge">Shortest</span></a></li>
                                }
                                else if (value == "shortest")
                                {
                                    <li><a asp-area="" asp-controller="Posts" asp-action="Details" asp-route-id="@Model.Id" asp-route-sort="recent"><span class="tt-badge">Recent</span></a></li>
                                    <li><a asp-area="" asp-controller="Posts" asp-action="Details" asp-route-id="@Model.Id" asp-route-sort="most liked"><span class="tt-badge">Most Liked</span></a></li>
                                    <li><a asp-area="" asp-controller="Posts" asp-action="Details" asp-route-id="@Model.Id" asp-route-sort="longest"><span class="tt-badge">Longest</span></a></li>
                                    <li><a asp-area="" asp-controller="Posts" asp-action="Details" asp-route-id="@Model.Id" asp-route-sort="shortest"><span class="tt-color02 tt-badge">Shortest</span></a></li>
                                }
                                else
                                {
                                    <li><a asp-area="" asp-controller="Posts" asp-action="Details" asp-route-id="@Model.Id" asp-route-sort="recent"><span class="tt-color02 tt-badge">Recent</span></a></li>
                                    <li><a asp-area="" asp-controller="Posts" asp-action="Details" asp-route-id="@Model.Id" asp-route-sort="most liked"><span class="tt-badge">Most Liked</span></a></li>
                                    <li><a asp-area="" asp-controller="Posts" asp-action="Details" asp-route-id="@Model.Id" asp-route-sort="longest"><span class="tt-badge">Longest</span></a></li>
                                    <li><a asp-area="" asp-controller="Posts" asp-action="Details" asp-route-id="@Model.Id" asp-route-sort="shortest"><span class="tt-badge">Shortest</span></a></li>
                                }
                            }
                        </ul>
                        <select class="tt-select form-control" onchange="location = this.value">
                            <option value="/Posts/Details/@Model.Id?sort=recent">Recent</option>
                            <option value="/Posts/Details/@Model.Id?sort=most%20liked">Most Liked</option>
                            <option value="/Posts/Details/@Model.Id?sort=longest">Longest</option>
                            <option value="/Posts/Details/@Model.Id?sort=shortest">Shortest</option>
                        </select>
                    </div>
                }

            </div>
        </div>
        @foreach (var reply in Model.Replies)
        {
            <div class="tt-item">
                <div class="tt-single-topic">
                    <div class="tt-item-header pt-noborder">
                        <div class="tt-item-info info-top">
                            <div class="tt-avatar-icon">
                                <i class="tt-icon"><svg><use xlink:href="#@reply.Author.ProfilePicture"></use></svg></i>
                            </div>
                            <div class="tt-avatar-title">
                                <a href="#">@reply.Author.UserName</a>
                            </div>
                            <a href="#" class="tt-info-time">
                                <i class="tt-icon"><svg><use xlink:href="#icon-time"></use></svg></i>@reply.CreatedOn
                            </a>
                        </div>
                    </div>
                    <div class="tt-item-description">
                        <p>@Html.Raw(reply.SanitizedDescription)</p>
                    </div>
                    <div class="tt-item-info info-bottom">
                        <button type="button" class="tt-icon-btn" style="padding: 0; border:none; background:none; outline:none" onclick="likeReply(@reply.Id)">
                            <i class="tt-icon"><svg><use xlink:href="#icon-like"></use></svg></i>
                        </button>
                        <span class="tt-text">&nbsp;</span>
                        <span id="reply-likes-@reply.Id" class="tt-text">@reply.Likes</span>
                        <span class="tt-text">&nbsp;</span>
                        <button type="button" class="tt-icon-btn" style="padding: 0; border:none; background:none; outline:none" onclick="dislikeReply(@reply.Id)">
                            <i class="tt-icon"><svg><use xlink:href="#icon-dislike"></use></svg></i>
                        </button>
                        <a asp-area="" asp-controller="Replies" asp-action="Details" asp-route-id="@reply.Id" class="tt-icon-btn">
                            <i class="tt-icon"><svg><use xlink:href="#icon-view"></use></svg></i>
                        </a>
                        @if (reply.Author.Id == this.Model.CurrentUserId || this.User.IsAdministrator())
                        {
                            <a asp-area="" asp-controller="Replies" asp-action="Edit" asp-route-id="@reply.Id" class="tt-icon-btn" style="color: #666f74">
                                <i class="fas fa-pen"></i>
                            </a>
                            <a asp-area="" asp-controller="Replies" asp-action="Delete" asp-route-id="@reply.Id" class="tt-icon-btn" style="color: #666f74">
                                <i class="fas fa-trash-alt"></i>
                            </a>
                        }
                        <div class="col-separator"></div>
                        <a href="#" class="tt-icon-btn tt-hover-02 tt-small-indent">
                            <i class="tt-icon"><svg><use xlink:href="#icon-share"></use></svg></i>
                        </a>
                        <a href="#" class="tt-icon-btn tt-hover-02 tt-small-indent">
                            <i class="tt-icon"><svg><use xlink:href="#icon-flag"></use></svg></i>
                        </a>
                        <a href="#" class="tt-icon-btn tt-hover-02 tt-small-indent">
                            <i class="tt-icon"><svg><use xlink:href="#icon-reply"></use></svg></i>
                        </a>
                    </div>
                </div>
            </div>
        }
    </div>
    @if (Model.Replies.Any())
    {
        <div class="tt-wrapper-inner">
            <h4 class="tt-title-separator"><span>You’ve reached the end of replies</span></h4>
        </div>
    }
    <div id="reply-box">
        <partial name="~/Views/Replies/_CreatePartial.cshtml" model="new RepliesCreateInputModel { PostId = Model.Id }" />
    </div>
</div>

@section Scripts {
    <script>
        tinymce.init({
            selector: '#reply-create',
            height: 300,
            plugins: [
                'lists advlist link autolink image media preview hr anchor',
                'code codesample paste',
                'table emoticons help'
            ],
            toolbar: [
                'undo redo | styleselect fontsizeselect | bold italic | alignleft aligncenter alignright alignjustify | outdent indent bullist numlist |',
                'forecolor backcolor emoticons | link image media codesample preview | help'
            ],
            link_default_protocol: "https",
            menubar: 'file edit view insert format table'
        });
    </script>
    <script>
        function animateButton() {
            $('html, body').animate({
                scrollTop: $("#reply-box").offset().top
            }, 1500);
        }

        function pinPost(id) {
            $.ajax({
                type: "POST",
                url: "/Administration/Posts/Pin/" + id,
                success: function (json) {
                    $('#isPinned').html(json.pinOrUnpin);
                }
            });
        }

        function likeReactPost(id) {
            $.ajax({
                type: "POST",
                url: "/api/post-reactions/" + id + "/like",
                success: function (json) {
                    $("#post-likes").html(json.likes);
                    $("#post-loves").html(json.loves);
                    $("#post-haha").html(json.haha);
                    $("#post-wow").html(json.wow);
                    $("#post-sad").html(json.sad);
                    $("#post-angry").html(json.angry);
                }
            });
        }

        function loveReactPost(id) {
            $.ajax({
                type: "POST",
                url: "/api/post-reactions/" + id + "/love",
                success: function (json) {
                    $("#post-likes").html(json.likes);
                    $("#post-loves").html(json.loves);
                    $("#post-haha").html(json.haha);
                    $("#post-wow").html(json.wow);
                    $("#post-sad").html(json.sad);
                    $("#post-angry").html(json.angry);
                }
            });
        }

        function hahaReactPost(id) {
            $.ajax({
                type: "POST",
                url: "/api/post-reactions/" + id + "/haha",
                success: function (json) {
                    $("#post-likes").html(json.likes);
                    $("#post-loves").html(json.loves);
                    $("#post-haha").html(json.haha);
                    $("#post-wow").html(json.wow);
                    $("#post-sad").html(json.sad);
                    $("#post-angry").html(json.angry);
                }
            });
        }

        function wowReactPost(id) {
            $.ajax({
                type: "POST",
                url: "/api/post-reactions/" + id + "/wow",
                success: function (json) {
                    $("#post-likes").html(json.likes);
                    $("#post-loves").html(json.loves);
                    $("#post-haha").html(json.haha);
                    $("#post-wow").html(json.wow);
                    $("#post-sad").html(json.sad);
                    $("#post-angry").html(json.angry);
                }
            });
        }

        function sadReactPost(id) {
            $.ajax({
                type: "POST",
                url: "/api/post-reactions/" + id + "/sad",
                success: function (json) {
                    $("#post-likes").html(json.likes);
                    $("#post-loves").html(json.loves);
                    $("#post-haha").html(json.haha);
                    $("#post-wow").html(json.wow);
                    $("#post-sad").html(json.sad);
                    $("#post-angry").html(json.angry);
                }
            });
        }

        function angryReactPost(id) {
            $.ajax({
                type: "POST",
                url: "/api/post-reactions/" + id + "/angry",
                success: function (json) {
                    $("#post-likes").html(json.likes);
                    $("#post-loves").html(json.loves);
                    $("#post-haha").html(json.haha);
                    $("#post-wow").html(json.wow);
                    $("#post-sad").html(json.sad);
                    $("#post-angry").html(json.angry);
                }
            });
        }
    </script>
    <script>
        function likeReply(replyId) {
            $.ajax({
                type: "POST",
                url: "/Replies/Like/" + replyId,
                success: function (json) {
                    $("#reply-likes-" + replyId).html(json.likes);
                }
            });
        }

        function dislikeReply(replyId) {
            $.ajax({
                type: "POST",
                url: "/Replies/Dislike/" + replyId,
                success: function (json) {
                    $("#reply-likes-" + replyId).html(json.likes);
                }
            });
        }
    </script>
    <partial name="_ValidationScriptsPartial" />
}